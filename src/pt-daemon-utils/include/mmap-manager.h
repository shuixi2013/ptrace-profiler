////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __MMAP_MANAGER_H__
#define __MMAP_MANAGER_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "json-populator.h"

#include <vector>

#include <string>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class MemoryMapRegion
{
public:

  MemoryMapRegion ()
    : start (0)
    , end (0)
    , offset (0)
    , inode (0)
  {
    permissions [0] = '\0';

    pathname [0] = '\0';
  }

  unsigned long long start;

  unsigned long long end;

  unsigned long long offset;

  unsigned long int inode;

  char permissions [5];

  char pathname [128];

};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

class MemoryMapManager : public JsonPopulator
{
public:

  MemoryMapManager ();

  ~MemoryMapManager ();

  size_t ParseUnixProcessMapsFile (const char *filename);

  const MemoryMapRegion *FindMapForAddress (uint64_t address) const;

  bool PopulateJsonObject (JsonNode &node) const override;

  bool PopulateJsonArray (JsonNode &node) const override;

protected:

  std::vector <MemoryMapRegion> m_regions;

};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif // __MMAP_MANAGER_H__

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
